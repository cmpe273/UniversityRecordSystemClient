package connection;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.4
 * 2013-05-04T18:24:38.060-07:00
 * Generated source version: 2.7.4
 * 
 */
@WebService(targetNamespace = "http://connection", name = "Service")
@XmlSeeAlso({ObjectFactory.class, entity.ObjectFactory.class})
public interface Service {

    @WebResult(name = "viewAllPersonReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "viewAllPerson", targetNamespace = "http://connection", className = "connection.ViewAllPerson")
    @WebMethod
    @ResponseWrapper(localName = "viewAllPersonResponse", targetNamespace = "http://connection", className = "connection.ViewAllPersonResponse")
    public java.util.List<entity.Person> viewAllPerson();

    @WebResult(name = "updateCourseReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "updateCourse", targetNamespace = "http://connection", className = "connection.UpdateCourse")
    @WebMethod
    @ResponseWrapper(localName = "updateCourseResponse", targetNamespace = "http://connection", className = "connection.UpdateCourseResponse")
    public boolean updateCourse(
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse,
        @WebParam(name = "name", targetNamespace = "http://connection")
        java.lang.String name,
        @WebParam(name = "section", targetNamespace = "http://connection")
        java.lang.String section,
        @WebParam(name = "hours", targetNamespace = "http://connection")
        java.lang.String hours,
        @WebParam(name = "loc", targetNamespace = "http://connection")
        java.lang.String loc
    );

    @WebResult(name = "viewAllInstructorsReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "viewAllInstructors", targetNamespace = "http://connection", className = "connection.ViewAllInstructors")
    @WebMethod
    @ResponseWrapper(localName = "viewAllInstructorsResponse", targetNamespace = "http://connection", className = "connection.ViewAllInstructorsResponse")
    public java.util.List<entity.Instructor> viewAllInstructors();

    @WebResult(name = "enrollStudentReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "enrollStudent", targetNamespace = "http://connection", className = "connection.EnrollStudent")
    @WebMethod
    @ResponseWrapper(localName = "enrollStudentResponse", targetNamespace = "http://connection", className = "connection.EnrollStudentResponse")
    public boolean enrollStudent(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson,
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "viewAllCourseReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "viewAllCourse", targetNamespace = "http://connection", className = "connection.ViewAllCourse")
    @WebMethod
    @ResponseWrapper(localName = "viewAllCourseResponse", targetNamespace = "http://connection", className = "connection.ViewAllCourseResponse")
    public java.util.List<entity.Course> viewAllCourse();

    @WebResult(name = "createStudentReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "createStudent", targetNamespace = "http://connection", className = "connection.CreateStudent")
    @WebMethod
    @ResponseWrapper(localName = "createStudentResponse", targetNamespace = "http://connection", className = "connection.CreateStudentResponse")
    public long createStudent(
        @WebParam(name = "pass", targetNamespace = "http://connection")
        java.lang.String pass,
        @WebParam(name = "fname", targetNamespace = "http://connection")
        java.lang.String fname,
        @WebParam(name = "lname", targetNamespace = "http://connection")
        java.lang.String lname,
        @WebParam(name = "address", targetNamespace = "http://connection")
        java.lang.String address,
        @WebParam(name = "city", targetNamespace = "http://connection")
        java.lang.String city,
        @WebParam(name = "state", targetNamespace = "http://connection")
        java.lang.String state,
        @WebParam(name = "zipcode", targetNamespace = "http://connection")
        java.lang.String zipcode,
        @WebParam(name = "persontype", targetNamespace = "http://connection")
        java.lang.String persontype
    );

    @WebResult(name = "createInstructorReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "createInstructor", targetNamespace = "http://connection", className = "connection.CreateInstructor")
    @WebMethod
    @ResponseWrapper(localName = "createInstructorResponse", targetNamespace = "http://connection", className = "connection.CreateInstructorResponse")
    public boolean createInstructor(
        @WebParam(name = "pass", targetNamespace = "http://connection")
        java.lang.String pass,
        @WebParam(name = "fname", targetNamespace = "http://connection")
        java.lang.String fname,
        @WebParam(name = "lname", targetNamespace = "http://connection")
        java.lang.String lname,
        @WebParam(name = "address", targetNamespace = "http://connection")
        java.lang.String address,
        @WebParam(name = "city", targetNamespace = "http://connection")
        java.lang.String city,
        @WebParam(name = "state", targetNamespace = "http://connection")
        java.lang.String state,
        @WebParam(name = "zipcode", targetNamespace = "http://connection")
        java.lang.String zipcode,
        @WebParam(name = "persontype", targetNamespace = "http://connection")
        java.lang.String persontype,
        @WebParam(name = "department", targetNamespace = "http://connection")
        java.lang.String department,
        @WebParam(name = "officeHr", targetNamespace = "http://connection")
        java.lang.String officeHr,
        @WebParam(name = "location", targetNamespace = "http://connection")
        java.lang.String location
    );

    @WebResult(name = "courseDetailReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "courseDetail", targetNamespace = "http://connection", className = "connection.CourseDetail")
    @WebMethod
    @ResponseWrapper(localName = "courseDetailResponse", targetNamespace = "http://connection", className = "connection.CourseDetailResponse")
    public entity.Course courseDetail(
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "deleteInstructorReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "deleteInstructor", targetNamespace = "http://connection", className = "connection.DeleteInstructor")
    @WebMethod
    @ResponseWrapper(localName = "deleteInstructorResponse", targetNamespace = "http://connection", className = "connection.DeleteInstructorResponse")
    public boolean deleteInstructor(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson
    );

    @WebResult(name = "deleteStudentReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://connection", className = "connection.DeleteStudent")
    @WebMethod
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://connection", className = "connection.DeleteStudentResponse")
    public boolean deleteStudent(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson
    );

    @WebResult(name = "updatePersonReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://connection", className = "connection.UpdatePerson")
    @WebMethod
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://connection", className = "connection.UpdatePersonResponse")
    public boolean updatePerson(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson,
        @WebParam(name = "pass", targetNamespace = "http://connection")
        java.lang.String pass,
        @WebParam(name = "fname", targetNamespace = "http://connection")
        java.lang.String fname,
        @WebParam(name = "lname", targetNamespace = "http://connection")
        java.lang.String lname,
        @WebParam(name = "address", targetNamespace = "http://connection")
        java.lang.String address,
        @WebParam(name = "city", targetNamespace = "http://connection")
        java.lang.String city,
        @WebParam(name = "state", targetNamespace = "http://connection")
        java.lang.String state,
        @WebParam(name = "zipcode", targetNamespace = "http://connection")
        java.lang.String zipcode,
        @WebParam(name = "persontype", targetNamespace = "http://connection")
        java.lang.String persontype,
        @WebParam(name = "department", targetNamespace = "http://connection")
        java.lang.String department,
        @WebParam(name = "officeHr", targetNamespace = "http://connection")
        java.lang.String officeHr,
        @WebParam(name = "location", targetNamespace = "http://connection")
        java.lang.String location
    );

    @WebResult(name = "assignCourseToInstructorReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "assignCourseToInstructor", targetNamespace = "http://connection", className = "connection.AssignCourseToInstructor")
    @WebMethod
    @ResponseWrapper(localName = "assignCourseToInstructorResponse", targetNamespace = "http://connection", className = "connection.AssignCourseToInstructorResponse")
    public boolean assignCourseToInstructor(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson,
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "unenrollStudentReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "unenrollStudent", targetNamespace = "http://connection", className = "connection.UnenrollStudent")
    @WebMethod
    @ResponseWrapper(localName = "unenrollStudentResponse", targetNamespace = "http://connection", className = "connection.UnenrollStudentResponse")
    public boolean unenrollStudent(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson,
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "getAdminPassReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "getAdminPass", targetNamespace = "http://connection", className = "connection.GetAdminPass")
    @WebMethod
    @ResponseWrapper(localName = "getAdminPassResponse", targetNamespace = "http://connection", className = "connection.GetAdminPassResponse")
    public java.lang.String getAdminPass();

    @WebResult(name = "removeReplaceInstructorReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "removeReplaceInstructor", targetNamespace = "http://connection", className = "connection.RemoveReplaceInstructor")
    @WebMethod
    @ResponseWrapper(localName = "removeReplaceInstructorResponse", targetNamespace = "http://connection", className = "connection.RemoveReplaceInstructorResponse")
    public boolean removeReplaceInstructor(
        @WebParam(name = "removeInsructor", targetNamespace = "http://connection")
        long removeInsructor,
        @WebParam(name = "replaceInstructor", targetNamespace = "http://connection")
        long replaceInstructor,
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "getAdminUnameReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "getAdminUname", targetNamespace = "http://connection", className = "connection.GetAdminUname")
    @WebMethod
    @ResponseWrapper(localName = "getAdminUnameResponse", targetNamespace = "http://connection", className = "connection.GetAdminUnameResponse")
    public java.lang.String getAdminUname();

    @WebResult(name = "searchPersonReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "searchPerson", targetNamespace = "http://connection", className = "connection.SearchPerson")
    @WebMethod
    @ResponseWrapper(localName = "searchPersonResponse", targetNamespace = "http://connection", className = "connection.SearchPersonResponse")
    public java.util.List<entity.Person> searchPerson(
        @WebParam(name = "attributeName", targetNamespace = "http://connection")
        java.lang.String attributeName,
        @WebParam(name = "attributeValue", targetNamespace = "http://connection")
        java.lang.String attributeValue
    );

    @WebResult(name = "personDetailReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "personDetail", targetNamespace = "http://connection", className = "connection.PersonDetail")
    @WebMethod
    @ResponseWrapper(localName = "personDetailResponse", targetNamespace = "http://connection", className = "connection.PersonDetailResponse")
    public entity.Person personDetail(
        @WebParam(name = "idperson", targetNamespace = "http://connection")
        long idperson
    );

    @WebResult(name = "searchCourseReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "searchCourse", targetNamespace = "http://connection", className = "connection.SearchCourse")
    @WebMethod
    @ResponseWrapper(localName = "searchCourseResponse", targetNamespace = "http://connection", className = "connection.SearchCourseResponse")
    public java.util.List<entity.Course> searchCourse(
        @WebParam(name = "attributeName", targetNamespace = "http://connection")
        java.lang.String attributeName,
        @WebParam(name = "attributeValue", targetNamespace = "http://connection")
        java.lang.String attributeValue
    );

    @WebResult(name = "deleteCourseReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "deleteCourse", targetNamespace = "http://connection", className = "connection.DeleteCourse")
    @WebMethod
    @ResponseWrapper(localName = "deleteCourseResponse", targetNamespace = "http://connection", className = "connection.DeleteCourseResponse")
    public boolean deleteCourse(
        @WebParam(name = "idcourse", targetNamespace = "http://connection")
        long idcourse
    );

    @WebResult(name = "viewAllStudentsReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "viewAllStudents", targetNamespace = "http://connection", className = "connection.ViewAllStudents")
    @WebMethod
    @ResponseWrapper(localName = "viewAllStudentsResponse", targetNamespace = "http://connection", className = "connection.ViewAllStudentsResponse")
    public java.util.List<entity.Person> viewAllStudents();

    @WebResult(name = "createCourseReturn", targetNamespace = "http://connection")
    @RequestWrapper(localName = "createCourse", targetNamespace = "http://connection", className = "connection.CreateCourse")
    @WebMethod
    @ResponseWrapper(localName = "createCourseResponse", targetNamespace = "http://connection", className = "connection.CreateCourseResponse")
    public boolean createCourse(
        @WebParam(name = "name", targetNamespace = "http://connection")
        java.lang.String name,
        @WebParam(name = "section", targetNamespace = "http://connection")
        java.lang.String section,
        @WebParam(name = "hours", targetNamespace = "http://connection")
        java.lang.String hours,
        @WebParam(name = "loc", targetNamespace = "http://connection")
        java.lang.String loc
    );
}
